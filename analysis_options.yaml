include: package:lint/strict.yaml

linter:
  rules:

    # Situational option
#    always_put_control_body_on_new_line: true

    avoid_equals_and_hash_code_on_mutable_classes: true
    avoid_renaming_method_parameters: true
    avoid_returning_null: true
    avoid_slow_async_io: true
#    discarded_futures: true
    flutter_style_todos: true
    only_throw_errors: true

    # Situational option
#    prefer_mixin: true

    prefer_single_quotes: true
    sized_box_shrink_expand: true
    sort_constructors_first: true
    unawaited_futures: true
    unnecessary_lambdas: true
    unnecessary_late: true
    use_decorated_box: true

    # shorter and prettier syntax
    cascade_invocations: true
    prefer_expression_function_bodies: true

    # Key is important for tests
    use_key_in_widget_constructors: true

    # Noisy issue, which triggering on core package, which can be included manually.
    depend_on_referenced_packages: false

analyzer:
  language:
    strict-casts: true
    strict-inference: true
    strict-raw-types: true
  plugins:
    - dart_code_metrics
  # exclude build folder and generated files
  exclude:
    - build/**
    - lib/**.g.dart
    # Test's folder
    - test/**.g.dart
    - integration_test/**
  errors:
    unused_local_variable: warning
    missing_required_param: error
    unused_field: warning
  strong-mode:
     implicit-dynamic: false

dart_code_metrics:
  anti-patterns:
    - long-method
    - long-parameter-list
  metrics:
    cyclomatic-complexity: 20
    maximum-nesting-level: 5
    number-of-parameters: 5
    source-lines-of-code: 50
    halstead-volume: 150

  metrics-exclude:
    - build/**
    - lib/**.g.dart
  # Test's folder
    - test/*
    - integration_test/**
  rules:
    - avoid-border-all
    - avoid-cascade-after-if-null
    - avoid-collection-methods-with-unrelated-types
    - avoid-double-slash-imports
    - avoid-duplicate-exports
    - avoid-global-state

    # Situational option
#    - avoid-ignoring-return-values

    - avoid-nested-conditional-expressions:
        acceptable-level: 3
    - avoid-redundant-async
    - avoid-returning-widgets
    - avoid-throw-in-catch-block
    - avoid-shrink-wrap-in-lists
    - avoid-unnecessary-setstate
    - avoid-unrelated-type-assertions
    - avoid-unnecessary-type-assertions
    - avoid-unnecessary-type-casts
    - avoid-unnecessary-conditionals
    - avoid-unused-parameters

    # A lot of false-positive issue.
#    - avoid-use-expanded-as-spacer

    - avoid-wrapping-in-padding

    # Unstable
#    - format-comment

    # Situational option
#    - newline-before-return

    - no-boolean-literal-compare
    - no-empty-block
    - no-equal-arguments:
        ignored-parameters:
          - height
          - width
          - minHeight
          - minWidth
          - left
          - right
          - indicatorPadding
          - fixedSize
          - indicatorColor
          - labelColor
          - unselectedLabelColor
          - unselectedLabelStyle
          - labelStyle
          - foregroundColor
          - backgroundColor
          - sigmaX
          - sigmaY
    - no-equal-then-else

    # Will be deleted after fully Theme implementation.
    - no-magic-number

    - no-object-declaration
    - prefer-commenting-analyzer-ignores
    - prefer-conditional-expressions
    - prefer-const-border-radius
    - prefer-correct-edge-insets-constructor
    - prefer-enums-by-name
    - prefer-extracting-callbacks
    - prefer-first
    - prefer-immediate-return
    - prefer-iterable-of
    - prefer-last

    # Unstable
    # - prefer-static-class

    # Will be deleted after fully Theme implementation.
    - prefer-single-widget-per-file:
        ignore-private-widgets: true

    - prefer-using-list-view

    # Use state.mounted or context.isMounted
    - use-setstate-synchronously